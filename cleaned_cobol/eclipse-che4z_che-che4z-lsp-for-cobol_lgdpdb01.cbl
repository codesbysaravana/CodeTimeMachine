PROCESS SQL
IDENTIFICATION DIVISION.
PROGRAM-ID. LGDPDB01.
ENVIRONMENT DIVISION.
CONFIGURATION SECTION.
DATA DIVISION.
WORKING-STORAGE SECTION.
01  WS-HEADER.
03 WS-EYECATCHER            PIC X(16)
VALUE 'LGDPDB01------WS'.
03 WS-TRANSID               PIC X(4).
03 WS-TERMID                PIC X(4).
03 WS-TASKNUM               PIC 9(7).
03 WS-FILLER                PIC X.
03 WS-ADDR-DFHCOMMAREA      USAGE is POINTER.
03 WS-CALEN                 PIC S9(4) COMP.
01  WS-ABSTIME                  PIC S9(8) COMP VALUE +0.
01  WS-TIME                     PIC X(8)  VALUE SPACES.
01  WS-DATE                     PIC X(10) VALUE SPACES.
01  ERROR-MSG.
03 EM-DATE                  PIC X(8)  VALUE SPACES.
03 FILLER                   PIC X     VALUE SPACES.
03 EM-TIME                  PIC X(6)  VALUE SPACES.
03 FILLER                   PIC X(9)  VALUE ' LGDPOL01'.
03 EM-VARIABLE.
05 FILLER                 PIC X(6)  VALUE ' CNUM='.
05 EM-CUSNUM              PIC X(10)  VALUE SPACES.
05 FILLER                 PIC X(6)  VALUE ' PNUM='.
05 EM-POLNUM              PIC X(10)  VALUE SPACES.
05 EM-SQLREQ              PIC X(16) VALUE SPACES.
05 FILLER                 PIC X(9)  VALUE ' SQLCODE='.
05 EM-SQLRC               PIC +9(5) USAGE DISPLAY.
01  CA-ERROR-MSG.
03 FILLER                   PIC X(9)  VALUE 'COMMAREA='.
03 CA-DATA                  PIC X(90) VALUE SPACES.
01 LGDPVS01                  PIC x(8) Value 'LGDPVS01'.
01  WS-COMMAREA-LENGTHS.
03 WS-CA-HEADER-LEN          PIC S9(4) COMP VALUE +28.
01 DB2-IN-INTEGERS.
03 DB2-CUSTOMERNUM-INT       PIC S9(9) COMP.
03 DB2-POLICYNUM-INT         PIC S9(9) COMP.
EXEC SQL
INCLUDE SQLCA
END-EXEC.
LINKAGE SECTION.
01  DFHCOMMAREA.
EXEC SQL
INCLUDE LGCMAREA
END-EXEC.
PROCEDURE DIVISION.
MAINLINE SECTION.
INITIALIZE WS-HEADER.
MOVE EIBTRNID TO WS-TRANSID.
MOVE EIBTRMID TO WS-TERMID.
MOVE EIBTASKN TO WS-TASKNUM.
INITIALIZE DB2-IN-INTEGERS.
IF EIBCALEN IS EQUAL TO ZERO
MOVE ' NO COMMAREA RECEIVED' TO EM-VARIABLE
PERFORM WRITE-ERROR-MESSAGE
EXEC CICS ABEND ABCODE('LGCA') NODUMP END-EXEC
END-IF
MOVE '00' TO CA-RETURN-CODE
MOVE EIBCALEN TO WS-CALEN.
SET WS-ADDR-DFHCOMMAREA TO ADDRESS OF DFHCOMMAREA.
IF EIBCALEN IS LESS THAN WS-CA-HEADER-LEN
MOVE '98' TO CA-RETURN-CODE
EXEC CICS RETURN END-EXEC
END-IF
MOVE CA-CUSTOMER-NUM TO DB2-CUSTOMERNUM-INT
MOVE CA-POLICY-NUM   TO DB2-POLICYNUM-INT
MOVE CA-CUSTOMER-NUM TO EM-CUSNUM
MOVE CA-POLICY-NUM   TO EM-POLNUM
IF ( CA-REQUEST-ID NOT EQUAL TO '01DEND' AND
CA-REQUEST-ID NOT EQUAL TO '01DHOU' AND
CA-REQUEST-ID NOT EQUAL TO '01DCOM' AND
CA-REQUEST-ID NOT EQUAL TO '01DMOT' ) Then
MOVE '99' TO CA-RETURN-CODE
ELSE
PERFORM DELETE-POLICY-DB2-INFO
EXEC CICS LINK PROGRAM(LGDPVS01)
Commarea(DFHCOMMAREA)
LENGTH(32500)
END-EXEC
END-IF.
EXEC CICS RETURN END-EXEC.
MAINLINE-EXIT.
EXIT.
DELETE-POLICY-DB2-INFO.
MOVE ' DELETE POLICY  ' TO EM-SQLREQ
EXEC SQL
DELETE
FROM POLICY
WHERE ( CUSTOMERNUMBER = :DB2-CUSTOMERNUM-INT AND
POLICYNUMBER  = :DB2-POLICYNUM-INT      )
END-EXEC
IF SQLCODE NOT EQUAL 0 Then
MOVE '90' TO CA-RETURN-CODE
PERFORM WRITE-ERROR-MESSAGE
EXEC CICS RETURN END-EXEC
END-IF.
EXIT.
WRITE-ERROR-MESSAGE.
MOVE SQLCODE TO EM-SQLRC
EXEC CICS ASKTIME ABSTIME(WS-ABSTIME)
END-EXEC
EXEC CICS FORMATTIME ABSTIME(Ws-ABSTIME)
MMDDYYYY(WS-DATE)
TIME(WS-TIME)
END-EXEC
MOVE WS-DATE TO EM-DATE
MOVE WS-TIME TO EM-TIME
EXEC CICS LINK PROGRAM('LGSTSQ')
COMMAREA(ERROR-MSG)
LENGTH(LENGTH OF ERROR-MSG)
END-EXEC.
IF EIBCALEN > 0 THEN
IF EIBCALEN < 91 THEN
MOVE DFHCOMMAREA(1:EIBCALEN) TO CA-DATA
EXEC CICS LINK PROGRAM('LGSTSQ')
COMMAREA(CA-ERROR-MSG)
LENGTH(LENGTH OF CA-ERROR-MSG)
END-EXEC
ELSE
MOVE DFHCOMMAREA(1:90) TO CA-DATA
EXEC CICS LINK PROGRAM('LGSTSQ')
COMMAREA(CA-ERROR-MSG)
LENGTH(LENGTH OF CA-ERROR-MSG)
END-EXEC
END-IF
END-IF.
EXIT.