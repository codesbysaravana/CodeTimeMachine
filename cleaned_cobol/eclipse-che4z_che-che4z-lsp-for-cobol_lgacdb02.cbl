PROCESS SQL
IDENTIFICATION DIVISION.
PROGRAM-ID. LGACDB02.
ENVIRONMENT DIVISION.
CONFIGURATION SECTION.
DATA DIVISION.
WORKING-STORAGE SECTION.
01  WS-HEADER.
03 WS-EYECATCHER            PIC X(16)
VALUE 'LGACDB02------WS'.
03 WS-TRANSID               PIC X(4).
03 WS-TERMID                PIC X(4).
03 WS-TASKNUM               PIC 9(7).
03 WS-FILLER                PIC X.
03 WS-ADDR-DFHCOMMAREA      USAGE is POINTER.
03 WS-CALEN                 PIC S9(4) COMP.
01  WS-RESP                   PIC S9(8) COMP.
01  LastCustNum               PIC S9(8) COMP.
01  WS-ABSTIME                  PIC S9(8) COMP VALUE +0.
01  WS-TIME                     PIC X(8)  VALUE SPACES.
01  WS-DATE                     PIC X(10) VALUE SPACES.
01  ERROR-MSG.
03 EM-DATE                  PIC X(8)  VALUE SPACES.
03 FILLER                   PIC X     VALUE SPACES.
03 EM-TIME                  PIC X(6)  VALUE SPACES.
03 FILLER                   PIC X(9)  VALUE ' LGACDB02'.
03 EM-VARIABLE.
05 FILLER                 PIC X(6)  VALUE ' CNUM='.
05 EM-CUSNUM              PIC X(10)  VALUE SPACES.
05 FILLER                 PIC X(6)  VALUE ' PNUM='.
05 EM-POLNUM              PIC X(10)  VALUE SPACES.
05 EM-SQLREQ              PIC X(16) VALUE SPACES.
05 FILLER                 PIC X(9)  VALUE ' SQLCODE='.
05 EM-SQLRC               PIC +9(5) USAGE DISPLAY.
01  CA-ERROR-MSG.
03 FILLER                   PIC X(9)  VALUE 'COMMAREA='.
03 CA-DATA                  PIC X(90) VALUE SPACES.
77 WS-CS-PASSWORD               PIC X(16) Value 'NewPass'.
77 WS-CS-STATE                  PIC X     VALUE 'N'.
77 WS-CA-COUNT                  PIC S9(9) COMP  Value 0.
01  WS-COMMAREA-LENGTHS.
03 WS-CA-HEADER-LEN         PIC S9(4) COMP VALUE +18.
03 WS-REQUIRED-CA-LEN       PIC S9(4)      VALUE +0.
COPY LGPOLICY.
01  DB2-OUT-INTEGERS.
03 DB2-CUSTOMERNUM-INT   PIC S9(9) COMP.
03 DB2-CUSTOMERCNT-INT   PIC S9(9) COMP.
EXEC SQL
INCLUDE SQLCA
END-EXEC.
LINKAGE SECTION.
01  DFHCOMMAREA.
03 D2-REQUEST-ID            PIC X(6).
03 D2-RETURN-CODE           PIC 9(2).
03 D2-CUSTOMER-NUM          PIC 9(10).
03 D2-CUSTSECR-PASS         PIC X(32).
03 D2-CUSTSECR-COUNT        PIC X(4).
03 D2-CUSTSECR-STATE        PIC X.
03 D2-CUSTSECR-DATA         PIC X(32445).
PROCEDURE DIVISION.
MAINLINE SECTION.
INITIALIZE WS-HEADER.
MOVE EIBTRNID TO WS-TRANSID.
MOVE EIBTRMID TO WS-TERMID.
MOVE EIBTASKN TO WS-TASKNUM.
IF EIBCALEN IS EQUAL TO ZERO
MOVE ' NO COMMAREA RECEIVED' TO EM-VARIABLE
PERFORM WRITE-ERROR-MESSAGE
EXEC CICS ABEND ABCODE('LGCA') NODUMP END-EXEC
END-IF
MOVE '00' TO D2-RETURN-CODE
MOVE EIBCALEN TO WS-CALEN.
SET WS-ADDR-DFHCOMMAREA TO ADDRESS OF DFHCOMMAREA.
Evaluate D2-REQUEST-ID
When '02ACUS'
Move D2-CUSTOMER-NUM    To DB2-CUSTOMERNUM-INT
Move D2-CUSTSECR-COUNT  To DB2-CUSTOMERCNT-INT
Perform INSERT-CUSTOMER-PASSWORD
When Other
Move '99' To D2-RETURN-CODE
Exec CICS Return End-EXEC
End-Evaluate
EXEC CICS RETURN END-EXEC.
MAINLINE-EXIT.
EXIT.
INSERT-CUSTOMER-PASSWORD.
MOVE ' INSERT SECURITY' TO EM-SQLREQ
EXEC SQL
INSERT INTO CUSTOMER_SECURE
( customerNumber,
customerPass,
state_indicator,
pass_changes   )
VALUES ( :DB2-CUSTOMERNUM-INT,
:D2-CUSTSECR-PASS,
:D2-CUSTSECR-STATE,
:DB2-CUSTOMERCNT-INT)
END-EXEC
IF SQLCODE NOT EQUAL 0
MOVE '98' TO D2-RETURN-CODE
PERFORM WRITE-ERROR-MESSAGE
EXEC CICS RETURN END-EXEC
END-IF
EXIT.
WRITE-ERROR-MESSAGE.
MOVE SQLCODE TO EM-SQLRC
EXEC CICS ASKTIME ABSTIME(WS-ABSTIME)
END-EXEC
EXEC CICS FORMATTIME ABSTIME(WS-ABSTIME)
MMDDYYYY(WS-DATE)
TIME(WS-TIME)
END-EXEC
MOVE WS-DATE TO EM-DATE
MOVE WS-TIME TO EM-TIME
EXEC CICS LINK PROGRAM('LGSTSQ')
COMMAREA(ERROR-MSG)
LENGTH(LENGTH OF ERROR-MSG)
END-EXEC.
IF EIBCALEN > 0 THEN
IF EIBCALEN < 91 THEN
MOVE DFHCOMMAREA(1:EIBCALEN) TO CA-DATA
EXEC CICS LINK PROGRAM('LGSTSQ')
COMMAREA(CA-ERROR-MSG)
LENGTH(LENGTH OF CA-ERROR-MSG)
END-EXEC
ELSE
MOVE DFHCOMMAREA(1:90) TO CA-DATA
EXEC CICS LINK PROGRAM('LGSTSQ')
COMMAREA(CA-ERROR-MSG)
LENGTH(LENGTH OF CA-ERROR-MSG)
END-EXEC
END-IF
END-IF.
EXIT.